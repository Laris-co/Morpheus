name: Deploy GCR
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  PROJECT_ID: ${{ secrets.GLOBAL_PROJECT_ID }}
  RUN_REGION: ${{ secrets.GLOBAL_RUN_REGION }}
  MQTT_HOST: ${{ secrets.MQTT_HOST }}
  MQTT_USERNAME: ${{ secrets.MQTT_USERNAME }}
  MQTT_PASSWORD: ${{ secrets.MQTT_PASSWORD }}
  BASIC_AUTH_USERNAME: ${{ secrets.GLOBAL_BASIC_AUTH_USERNAME_N }}
  BASIC_AUTH_PASSWORD: ${{ secrets.GLOBAL_BASIC_AUTH_PASSWORD_N }}
  MQTT_PORT: ${{ secrets.MQTT_PORT }}
  REPO_NAME: ${{ github.event.repository.name }}
  REPO_OWNER: ${{ github.event.repository.owner.login }}
  SA: ${{ secrets.GLOBAL_SA_KEY }}

jobs:
  deploy:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: nelonoel/branch-name@v1.0.1
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ env.SA }}
      - run: ./build.sh react-app
      - run: gcloud auth configure-docker
      - name: Local Build
        run: |
          docker build \
            --build-arg MQTT_HOST=$MQTT_HOST \
            --build-arg MQTT_USER=$MQTT_USERNAME \
            --build-arg MQTT_PASSWORD=$MQTT_PASSWORD \
            --build-arg BASIC_AUTH_USERNAME=$BASIC_AUTH_USERNAME \
            --build-arg BASIC_AUTH_PASSWORD=$BASIC_AUTH_PASSWORD \
            --build-arg MQTT_PORT=1883 \
            -t "gcr.io/$PROJECT_ID/$REPO_NAME:${GITHUB_RUN_NUMBER}" .
      - run: docker push "gcr.io/$PROJECT_ID/$REPO_NAME:${GITHUB_RUN_NUMBER}"
      # - run: |
      #     gcloud builds submit \
      #         --tag gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_RUN_NUMBER --verbosity=debug
      - run: |
          gcloud run deploy $REPO_NAME-$BRANCH_NAME \
          --quiet \
          --region $RUN_REGION \
          --image gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_RUN_NUMBER \
          --platform managed \
          --allow-unauthenticated
      - name: send custom message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.GLOBAL_TELEGRAM_TO_NAT }}
          token: ${{ secrets.GLOBAL_TELEGRAM_TOKEN }}
          message: |
            $REPO_NAME-$BRANCH_NAME Deployed.
